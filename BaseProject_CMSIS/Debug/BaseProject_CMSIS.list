
BaseProject_CMSIS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000164  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000294  0800029c  0001029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000294  08000294  0001029c  2**0
                  CONTENTS
  4 .ARM          00000000  08000294  08000294  0001029c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000294  0800029c  0001029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000294  08000294  00010294  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000298  08000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800029c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800029c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001029c  2**0
                  CONTENTS, READONLY
 12 .debug_line   00000519  00000000  00000000  000102c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_info   00000270  00000000  00000000  000107de  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 000000f8  00000000  00000000  00010a4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000048  00000000  00000000  00010b48  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00053f97  00000000  00000000  00010b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00000030  00000000  00000000  00064b28  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macro  0000f0f3  00000000  00000000  00064b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00073c4b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  00073cc8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800027c 	.word	0x0800027c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800027c 	.word	0x0800027c

08000170 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000170:	480d      	ldr	r0, [pc, #52]	; (80001a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000172:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000174:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000178:	480c      	ldr	r0, [pc, #48]	; (80001ac <LoopForever+0x6>)
  ldr r1, =_edata
 800017a:	490d      	ldr	r1, [pc, #52]	; (80001b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800017c:	4a0d      	ldr	r2, [pc, #52]	; (80001b4 <LoopForever+0xe>)
  movs r3, #0
 800017e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000180:	e002      	b.n	8000188 <LoopCopyDataInit>

08000182 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000182:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000184:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000186:	3304      	adds	r3, #4

08000188 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000188:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800018a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800018c:	d3f9      	bcc.n	8000182 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800018e:	4a0a      	ldr	r2, [pc, #40]	; (80001b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000190:	4c0a      	ldr	r4, [pc, #40]	; (80001bc <LoopForever+0x16>)
  movs r3, #0
 8000192:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000194:	e001      	b.n	800019a <LoopFillZerobss>

08000196 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000196:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000198:	3204      	adds	r2, #4

0800019a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800019a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800019c:	d3fb      	bcc.n	8000196 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800019e:	f000 f849 	bl	8000234 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001a2:	f000 f80f 	bl	80001c4 <main>

080001a6 <LoopForever>:

LoopForever:
    b LoopForever
 80001a6:	e7fe      	b.n	80001a6 <LoopForever>
  ldr   r0, =_estack
 80001a8:	20001000 	.word	0x20001000
  ldr r0, =_sdata
 80001ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001b4:	0800029c 	.word	0x0800029c
  ldr r2, =_sbss
 80001b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001bc:	2000001c 	.word	0x2000001c

080001c0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001c0:	e7fe      	b.n	80001c0 <ADC1_2_IRQHandler>
	...

080001c4 <main>:




int main(void)
{
 80001c4:	b480      	push	{r7}
 80001c6:	b083      	sub	sp, #12
 80001c8:	af00      	add	r7, sp, #0

	RCC->APB2ENR |= (1<<4);
 80001ca:	4b17      	ldr	r3, [pc, #92]	; (8000228 <main+0x64>)
 80001cc:	699b      	ldr	r3, [r3, #24]
 80001ce:	4a16      	ldr	r2, [pc, #88]	; (8000228 <main+0x64>)
 80001d0:	f043 0310 	orr.w	r3, r3, #16
 80001d4:	6193      	str	r3, [r2, #24]

	GPIOC->CRH |= (1<<21);  GPIOC->CRH &= ~(1<<20); //Set output mode
 80001d6:	4b15      	ldr	r3, [pc, #84]	; (800022c <main+0x68>)
 80001d8:	685b      	ldr	r3, [r3, #4]
 80001da:	4a14      	ldr	r2, [pc, #80]	; (800022c <main+0x68>)
 80001dc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001e0:	6053      	str	r3, [r2, #4]
 80001e2:	4b12      	ldr	r3, [pc, #72]	; (800022c <main+0x68>)
 80001e4:	685b      	ldr	r3, [r3, #4]
 80001e6:	4a11      	ldr	r2, [pc, #68]	; (800022c <main+0x68>)
 80001e8:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80001ec:	6053      	str	r3, [r2, #4]
	GPIOC->CRH &= ~(1<<23); GPIOC->CRH &= ~(1<<22); //Set push-pull mode
 80001ee:	4b0f      	ldr	r3, [pc, #60]	; (800022c <main+0x68>)
 80001f0:	685b      	ldr	r3, [r3, #4]
 80001f2:	4a0e      	ldr	r2, [pc, #56]	; (800022c <main+0x68>)
 80001f4:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80001f8:	6053      	str	r3, [r2, #4]
 80001fa:	4b0c      	ldr	r3, [pc, #48]	; (800022c <main+0x68>)
 80001fc:	685b      	ldr	r3, [r3, #4]
 80001fe:	4a0b      	ldr	r2, [pc, #44]	; (800022c <main+0x68>)
 8000200:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8000204:	6053      	str	r3, [r2, #4]


    /* Loop forever */
	while(1){
		GPIOC->ODR ^= (1<<13);
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <main+0x68>)
 8000208:	68db      	ldr	r3, [r3, #12]
 800020a:	4a08      	ldr	r2, [pc, #32]	; (800022c <main+0x68>)
 800020c:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000210:	60d3      	str	r3, [r2, #12]
		for(uint32_t cnt = 0; cnt < 100000; cnt++);
 8000212:	2300      	movs	r3, #0
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	e002      	b.n	800021e <main+0x5a>
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	3301      	adds	r3, #1
 800021c:	607b      	str	r3, [r7, #4]
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	4a03      	ldr	r2, [pc, #12]	; (8000230 <main+0x6c>)
 8000222:	4293      	cmp	r3, r2
 8000224:	d9f8      	bls.n	8000218 <main+0x54>
		GPIOC->ODR ^= (1<<13);
 8000226:	e7ee      	b.n	8000206 <main+0x42>
 8000228:	40021000 	.word	0x40021000
 800022c:	40011000 	.word	0x40011000
 8000230:	0001869f 	.word	0x0001869f

08000234 <__libc_init_array>:
 8000234:	b570      	push	{r4, r5, r6, lr}
 8000236:	2500      	movs	r5, #0
 8000238:	4e0c      	ldr	r6, [pc, #48]	; (800026c <__libc_init_array+0x38>)
 800023a:	4c0d      	ldr	r4, [pc, #52]	; (8000270 <__libc_init_array+0x3c>)
 800023c:	1ba4      	subs	r4, r4, r6
 800023e:	10a4      	asrs	r4, r4, #2
 8000240:	42a5      	cmp	r5, r4
 8000242:	d109      	bne.n	8000258 <__libc_init_array+0x24>
 8000244:	f000 f81a 	bl	800027c <_init>
 8000248:	2500      	movs	r5, #0
 800024a:	4e0a      	ldr	r6, [pc, #40]	; (8000274 <__libc_init_array+0x40>)
 800024c:	4c0a      	ldr	r4, [pc, #40]	; (8000278 <__libc_init_array+0x44>)
 800024e:	1ba4      	subs	r4, r4, r6
 8000250:	10a4      	asrs	r4, r4, #2
 8000252:	42a5      	cmp	r5, r4
 8000254:	d105      	bne.n	8000262 <__libc_init_array+0x2e>
 8000256:	bd70      	pop	{r4, r5, r6, pc}
 8000258:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800025c:	4798      	blx	r3
 800025e:	3501      	adds	r5, #1
 8000260:	e7ee      	b.n	8000240 <__libc_init_array+0xc>
 8000262:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000266:	4798      	blx	r3
 8000268:	3501      	adds	r5, #1
 800026a:	e7f2      	b.n	8000252 <__libc_init_array+0x1e>
 800026c:	08000294 	.word	0x08000294
 8000270:	08000294 	.word	0x08000294
 8000274:	08000294 	.word	0x08000294
 8000278:	08000298 	.word	0x08000298

0800027c <_init>:
 800027c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800027e:	bf00      	nop
 8000280:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000282:	bc08      	pop	{r3}
 8000284:	469e      	mov	lr, r3
 8000286:	4770      	bx	lr

08000288 <_fini>:
 8000288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800028a:	bf00      	nop
 800028c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800028e:	bc08      	pop	{r3}
 8000290:	469e      	mov	lr, r3
 8000292:	4770      	bx	lr
